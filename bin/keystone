#!/usr/bin/env python
# vim: tabstop=4 shiftwidth=4 softtabstop=4

import greenlet
import logging
import os
import sys

# If ../../keystone/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir,
                               'keystonelight',
                               '__init__.py')):
    sys.path.insert(0, possible_topdir)

from paste import deploy

from keystonelight import wsgi


def create_server(name, port):
    app = deploy.loadapp('config:%s' % conf, name=name)
    return wsgi.Server(app, port)


def serve(*servers):
    for server in servers:
        server.start()

    for server in servers:
        try:
            server.wait()
        except greenlet.GreenletExit:
            pass


if __name__ == '__main__':
    default_conf = os.path.join(possible_topdir,
                                'etc',
                                'default.conf')
    logging.getLogger().setLevel(logging.DEBUG)

    conf = len(sys.argv) > 1 and sys.argv[1] or default_conf
    options = deploy.appconfig('config:%s' % conf)

    servers = []
    servers.append(create_server('keystone_admin',
                                 int(options['admin_port'])))
    servers.append(create_server('keystonelight',
                                 int(options['public_port'])))
    serve(*servers)
